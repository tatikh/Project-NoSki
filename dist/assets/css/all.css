@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@font-face {
  font-family: 'PhagsPa';
  src: local("../fonts/PhagsPa/PhagsPa"), local("../fonts/PhagsPa/PhagsPa"), url("../fonts/PhagsPa/PhagsPa.woff") format("woff"), url("../fonts/PhagsPa/PhagsPa.ttf") format("truetype");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: 'PhagsPa Bold';
  src: local("../fonts/PhagsPa Bold/PhagsPa Bold"), local("../fonts/PhagsPa Bold/PhagsPa Bold"), url("../fonts/PhagsPa Bold/PhagsPa Bold.woff") format("woff"), url("../fonts/PhagsPa Bold/PhagsPa Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal; }

html {
  box-sizing: border-box;
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  font-family: "PhagsPa", Helvetica, Arial, sans-serif;
  font-size: 14px;
  color: #000;
  background: #fff; }

a {
  color: #000; }
  a:hover {
    color: #262626;
    text-decoration: underline; }

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle; }

.img-responsive {
  max-width: 100%;
  height: auto;
  display: block; }

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: "PhagsPa", Helvetica, Arial, sans-serif;
  font-weight: 500;
  line-height: 1.1;
  color: inherit; }

h1, .h1 {
  font-size: 35px; }

h4, .h4 {
  font-size: 18px; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

.text-nowrap {
  white-space: nowrap; }

.pull-right {
  float: right; }

.pull-left {
  float: left; }

.text-lowercase {
  text-transform: lowercase; }

.text-uppercase {
  text-transform: uppercase; }

.text-capitalize {
  text-transform: capitalize; }

.link-notunderline {
  text-decoration: none; }

ul,
ol {
  margin-top: 0;
  margin-bottom: 1.41429; }
  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin-bottom: 0; }

.list-unstyled {
  padding-left: 0;
  list-style: none; }

.list-inline {
  padding-left: 0;
  list-style: none;
  margin-left: -5px; }
  .list-inline > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px; }

p:last-child,
ul:last-child,
ol:last-child {
  margin-bottom: 0; }

.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto; }

input {
  outline: none; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?ue6hn0");
  src: url("../fonts/icomoon.eot?ue6hn0#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?ue6hn0") format("truetype"), url("../fonts/icomoon.woff?ue6hn0") format("woff"), url("../fonts/icomoon.svg?ue6hn0#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon {
  font-size: 22px; }

.icon-wishlist:before {
  content: ""; }

.icon-cart .path1:before {
  content: "";
  color: white; }

.icon-cart .path2:before {
  content: "";
  margin-left: -0.8056640625em;
  color: #1d1d1b; }

.icon-cart .path3:before {
  content: "";
  margin-left: -0.8056640625em;
  color: #1d1d1b; }

.icon-search:before {
  content: ""; }

.icon-arrow-right2:before {
  content: ""; }

.icon-instagram:before {
  content: ""; }

.icon-twitter:before {
  content: ""; }

.icon-facebook:before {
  content: ""; }

.icon-pinterest:before {
  content: ""; }

.icon-google:before {
  content: ""; }

.button {
  display: inline-block;
  margin-bottom: 0;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  font-family: "PhagsPa", Helvetica, Arial, sans-serif;
  font-size: 20px;
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap; }
  .button:hover {
    background-color: #777777;
    text-decoration: none; }
  .button-cart {
    padding: 26px 46px;
    color: #fff;
    background-color: #000;
    border-color: none;
    margin-bottom: 100px; }

.main {
  max-width: 1920px; }

.main-img {
  width: 100%;
  height: auto;
  padding-bottom: 16.36%; }

.main-block {
  max-width: 1528px;
  padding: 0 12.83%;
  padding-bottom: 11.71%;
  background-image: url(../../images/content/main-bg1.jpg), url(../../images/content/main-bg2.jpg), url(../../images/content/main-bg3.jpg);
  background-position: 8.57% 7.63%, 83.4% 50.9%, 33.7% 79.24%;
  background-repeat: no-repeat, no-repeat, no-repeat;
  background-size: 6.5% auto, 4.7% auto, 3.3% auto; }
  .main-block h1 {
    margin-top: 0;
    margin-bottom: 3%; }

.block-img-top {
  width: 32.1%;
  left: 68.06%;
  margin-top: 0;
  position: relative; }

.block-img-middle-bottom {
  width: 29.52%;
  left: 19.5%;
  margin-top: -8%;
  position: relative; }

.block-img-middle-top {
  width: 27.49%;
  left: 0;
  margin-top: -23.3%;
  position: relative; }

.block-img-bottom {
  width: 32.1%;
  left: 50.7%;
  margin-top: -1%;
  position: relative; }

.collection {
  position: relative; }

.name-collection {
  position: absolute;
  font-weight: bold; }
  .name-collection-top {
    top: 46.1%;
    left: 53.5%; }
  .name-collection-middle {
    top: 49.3%;
    left: 40.8%; }
  .name-collection-bottom {
    top: 78.5%;
    left: 43.5%; }

.wrapper {
  overflow: hidden; }

@-webkit-keyframes search_form {
  from {
    right: -9999px; }
  to {
    right: 45px; } }

@keyframes search_form {
  from {
    right: -9999px; }
  to {
    right: 45px; } }

.container {
  max-width: 1530px;
  margin: 0 auto; }

.header {
  padding: 63px 0 61px; }
  @media only screen and (max-width: 1023px) {
    .header {
      padding: 21px 0 21px; } }

.header-holder {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

.logo {
  width: 162px; }

#nav {
  font-size: 24px;
  line-height: 28px;
  color: #000;
  font-family: 'PhagsPa';
  font-weight: bold;
  width: 710px; }
  #nav ul {
    margin: 0;
    padding: 0;
    list-style: none; }
    #nav ul > li {
      display: inline-block;
      padding: 0 38px; }
      #nav ul > li:first-child {
        padding: 0 38px 0 0; }
      #nav ul > li:last-child {
        padding: 0 0 0 38px; }
      #nav ul > li > a {
        color: #000;
        text-decoration: none;
        padding: 0 0 5px;
        border-bottom: 2px solid transparent;
        transition: border-bottom 1s; }
        #nav ul > li > a:hover, #nav ul > li > a:active {
          border-bottom: 2px solid #000; }

.icons_block {
  list-style: none;
  font-size: 25px;
  line-height: 28px;
  margin: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  .icons_block > li {
    display: inline;
    padding: 0 17px; }
    .icons_block > li > a {
      text-decoration: none; }

.opener {
  display: none;
  float: left;
  width: 56px;
  height: 58px;
  position: relative;
  text-indent: -9999px;
  overflow: hidden; }

.opener:before,
.opener:after,
.opener span {
  background: #1d1d1b;
  position: absolute;
  top: 12px;
  left: 25%;
  right: 25%;
  height: 4px;
  transition: all 0.2s linear;
  border-top: 1px solid #aaaaa9; }

.opener:before,
.opener:after {
  content: '';
  top: 2px; }

.opener:before {
  border-top: none;
  border-bottom: 1px solid #aaaaa9; }

.opener:after {
  top: 22px; }

.close-btn span,
.nav-active .opener span {
  opacity: 0; }

.opener:hover {
  opacity: .9; }

.close-btn:after,
.close-btn:before,
.nav-active .opener:after,
.nav-active .opener:before {
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
  top: 16px;
  left: 15%;
  right: 15%;
  border: none; }

.close-btn:after,
.nav-active .opener:after {
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg); }

.search_box {
  position: relative; }
  .search_box input[type='checkbox'] {
    position: absolute;
    left: -9999px; }
  .search_box label {
    cursor: pointer; }
  .search_box #search_form {
    max-width: 150px;
    position: absolute;
    right: -9999px;
    bottom: 0;
    background: transparent;
    border-bottom: 1px solid #000;
    border-top: 0;
    border-left: 0;
    border-right: 0; }

input[type='checkbox']:checked ~ #search_form {
  -webkit-animation: search_form  0.5s forwards;
  animation: search_form  0.5s forwards; }

@media only screen and (max-width: 767px) {
  .logo_block {
    display: none; } }

@media only screen and (max-width: 1023px) {
  .opener {
    display: block; }
  #nav .drop {
    float: none;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.25s linear;
    height: 0;
    position: absolute;
    top: 80px;
    left: 0;
    right: 0; }
  .nav-active #nav .drop {
    opacity: 1;
    visibility: visible;
    height: auto;
    text-align: center; }
  #nav .drop > ul {
    background: #fff;
    display: block;
    padding: 0;
    font-size: 18px;
    letter-spacing: 2px;
    margin: 0 4px; }
  #nav ul {
    float: none; }
  #nav ul li {
    float: none;
    margin: 0;
    padding: 5px 0;
    display: block; }
    #nav ul li:first-child {
      padding: 5px 0; }
    #nav ul li:last-child {
      padding: 5px 0; }
  #nav li a {
    display: block;
    padding: 3px 0 7px; } }

.footer {
  background: #000;
  color: #fff; }
  .footer-holder {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    padding: 83px 10px 25px 10px;
    font-size: 20px;
    line-height: 1.28571; }
    .footer-holder .line-mobile {
      display: none; }
  .footer-inner {
    padding-bottom: 25px; }
    .footer-inner > ul {
      display: inline-block;
      padding: 0;
      padding-right: 50px; }
      .footer-inner > ul > li {
        list-style-type: none;
        display: block;
        text-align: left;
        margin-right: 10px; }
        .footer-inner > ul > li > a {
          color: #fff;
          text-decoration: none; }
          .footer-inner > ul > li > a:hover {
            color: #fff;
            filter: alpha(Opacity=70);
            opacity: 0.7; }
    .footer-inner .form {
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row;
      -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
      -webkit-align-self: flex-start;
      -ms-flex-item-align: start;
      align-self: flex-start; }
      .footer-inner .form_group {
        position: relative;
        display: table;
        border-collapse: separate;
        margin-top: -15px;
        margin-right: 40px; }
        .footer-inner .form_group .form_label {
          margin-right: 55px;
          margin-left: 55px;
          display: inline-block; }
        .footer-inner .form_group .form_input {
          display: inline-block;
          border: 0;
          border-bottom: 1px solid #fff;
          min-width: 250px;
          background: transparent;
          outline: none; }
        .footer-inner .form_group .btn-submit {
          display: inline;
          text-align: center;
          cursor: pointer;
          padding: 3px 0px;
          font-size: 14px;
          color: #fff;
          border: 0;
          border-bottom: 1px solid #fff;
          background: transparent;
          position: relative; }
    .footer-inner .footer-social-list {
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row;
      -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap; }
      .footer-inner .footer-social-list > ul {
        display: inline; }
        .footer-inner .footer-social-list > ul > li {
          list-style-type: none;
          display: inline;
          text-align: left;
          margin-right: 25px; }
          .footer-inner .footer-social-list > ul > li > a {
            color: #fff;
            text-decoration: none; }
            .footer-inner .footer-social-list > ul > li > a:hover {
              color: #fff;
              filter: alpha(Opacity=70);
              opacity: 0.7; }

.copyright {
  display: block; }
  .copyright p {
    color: #fff;
    filter: alpha(Opacity=30);
    opacity: 0.3;
    font-size: 14px;
    padding: 30px;
    text-align: center; }

/*# sourceMappingURL=data:application/json;base64, */
