/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

<<<<<<< HEAD
@font-face {
  font-family: 'PhagsPa';
  src: local("../fonts/PhagsPa/PhagsPa"), local("../fonts/PhagsPa/PhagsPa"), url("../fonts/PhagsPa/PhagsPa.woff") format("woff"), url("../fonts/PhagsPa/PhagsPa.ttf") format("truetype");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: 'PhagsPa';
  src: local("../fonts/PhagsPa Bold/PhagsPa Bold"), local("../fonts/PhagsPa Bold/PhagsPa Bold"), url("../fonts/PhagsPa Bold/PhagsPa Bold.woff") format("woff"), url("../fonts/PhagsPa Bold/PhagsPa Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal; }

html {
  box-sizing: border-box;
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  font-family: "PhagsPa", Helvetica, Arial, sans-serif;
  font-size: 14px;
  color: #000;
  background: #fff; }

a {
  color: #000; }
  a:hover {
    color: #262626;
    text-decoration: underline; }

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle; }

.img-responsive {
  max-width: 100%;
  height: auto;
  display: block; }

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: "PhagsPa", Helvetica, Arial, sans-serif;
  font-weight: 700;
  line-height: 1.1;
  color: inherit; }

h1, .h1 {
  font-size: 18px; }

h4, .h4 {
  font-size: 14px; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

.text-nowrap {
  white-space: nowrap; }

.pull-right {
  float: right; }

.pull-left {
  float: left; }

.text-lowercase {
  text-transform: lowercase; }

.text-uppercase {
  text-transform: uppercase; }

.text-capitalize {
  text-transform: capitalize; }

.link-notunderline {
  text-decoration: none; }

ul,
ol {
  margin-top: 0;
  margin-bottom: 1.41429; }
  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin-bottom: 0; }

.list-unstyled {
  padding-left: 0;
  list-style: none; }

.list-inline {
  padding-left: 0;
  list-style: none;
  margin-left: -5px; }
  .list-inline > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px; }

p:last-child,
ul:last-child,
ol:last-child {
  margin-bottom: 0; }

.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto; }

input {
  outline: none; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?ue6hn0");
  src: url("../fonts/icomoon.eot?ue6hn0#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?ue6hn0") format("truetype"), url("../fonts/icomoon.woff?ue6hn0") format("woff"), url("../fonts/icomoon.svg?ue6hn0#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon {
  width: 25px;
  height: 25px; }

.icon-wishlist:before {
  content: ""; }

.icon-cart .path1:before {
  content: "";
  color: white; }

.icon-cart .path2:before {
  content: "";
  margin-left: -0.8056640625em;
  color: #1d1d1b; }

.icon-cart .path3:before {
  content: "";
  margin-left: -0.8056640625em;
  color: #1d1d1b; }

.icon-search:before {
  content: ""; }

.icon-arrow-right2:before {
  content: ""; }

.icon-instagram:before {
  content: ""; }

.icon-twitter:before {
  content: ""; }

.icon-facebook:before {
  content: ""; }

.icon-pinterest:before {
  content: ""; }

.icon-google:before {
  content: ""; }

.button {
  display: inline-block;
  margin-bottom: 0;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  font-family: "PhagsPa", Helvetica, Arial, sans-serif;
  font-size: 20px;
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap; }
  .button:hover {
    background-color: #777777;
    text-decoration: none; }
  .button-cart {
    padding: 26px 46px;
    color: #fff;
    background-color: #000;
    border-color: none;
    margin-bottom: 100px; }

.main {
  min-width: 320px; }
  .main-content {
    min-width: 290px;
    padding: 0 4.68%;
    background-image: none; }
  .main-img {
    margin-bottom: 40px;
    overflow: hidden; }
  .main-img-central {
    height: 414px;
    width: auto;
    max-width: none;
    position: relative;
    left: -63%; }
  @media (min-width: 460px) {
    .main-img-central {
      left: -59%; } }
  @media (min-width: 550px) {
    .main-img-central {
      left: -31%; } }
  @media (min-width: 750px) {
    .main-img-central {
      left: -17%; } }
  @media (min-width: 870px) {
    .main {
      max-width: 1920px; }
      .main-content {
        padding: 0 10.1%;
        max-width: 1528px;
        background-image: url(../../assets/images/content/main-bg1.svg), url(../../assets/images/content/main-bg2.svg), url(../../assets/images/content/main-bg3.svg);
        background-position: 17% 8.8%, 82.7% 51.9%, 33% 80.1%;
        background-repeat: no-repeat, no-repeat, no-repeat;
        background-size: 6.6% auto, 4.7% auto, 3.3% auto; }
      .main-img {
        width: 100%;
        height: auto;
        margin-bottom: 16.36%;
        overflow: inherit; }
      .main-img-central {
        max-width: 100%;
        height: auto;
        left: 0;
        position: static; }
      .main-block {
        padding-bottom: 11.71%; }
        .main-block .h1 {
          margin-top: 0;
          margin-bottom: 3%;
          color: #010101;
          width: auto; } }
      @media (min-width: 870px) and (min-width: 870px) {
        .main-block .h1 {
          font-size: 35px; } }

.block-img-top {
  width: 61%;
  left: 6.9%;
  margin-top: 0;
  position: relative;
  margin-bottom: 3.5%; }
  @media (min-width: 870px) {
    .block-img-top {
      width: 32.1%;
      left: 68.06%;
      margin-top: 0;
      position: relative; } }

.block-img-middle-bottom {
  width: 56.9%;
  left: 35.9%;
  margin-top: 0%;
  position: relative; }
  @media (min-width: 870px) {
    .block-img-middle-bottom {
      width: 29.52%;
      left: 19.5%;
      margin-top: -8%;
      position: relative; } }

.block-img-middle-top {
  width: 50.3%;
  left: 0;
  margin-top: -50%;
  position: relative;
  margin-bottom: 3.5%; }
  @media (min-width: 870px) {
    .block-img-middle-top {
      width: 27.49%;
      left: 0;
      margin-top: -23.3%;
      position: relative; } }

.block-img-bottom {
  width: 73.1%;
  left: 26.9%;
  margin-top: 0%;
  position: relative; }
  @media (min-width: 870px) {
    .block-img-bottom {
      width: 32.1%;
      left: 50.7%;
      margin-top: -1%;
      position: relative; } }

.collection {
  position: relative; }
  .collection-middle {
    margin-bottom: 40px; }

.name-collection {
  position: absolute;
  font-weight: bold;
  line-height: 30px; }
  .name-collection-top {
    top: 58.1%;
    left: 53.5%; }
  .name-collection-middle {
    width: 124px;
    text-align: left;
    line-height: 1.1;
    margin-top: 8px;
    top: 83.6%;
    left: 55.8%; }
  .name-collection-bottom {
    top: 78.6%;
    left: 0; }
  @media (min-width: 460px) {
    .name-collection {
      position: absolute;
      font-weight: bold; }
      .name-collection-top {
        top: 60.9%;
        left: 54.7%; }
      .name-collection-middle {
        top: 83.6%;
        left: 55.8%; }
      .name-collection-bottom {
        top: 78.56%;
        left: 11%; } }
  @media (min-width: 748px) {
    .name-collection {
      font-size: 18px; } }
  @media (min-width: 870px) {
    .name-collection {
      width: 100%;
      font-size: 18px;
      position: absolute;
      font-weight: bold; }
      .name-collection-top {
        top: 60.9%;
        left: 54.7%; }
      .name-collection-middle {
        top: 49.3%;
        left: 40.8%; }
      .name-collection-bottom {
        top: 84.56%;
        left: 43.5%; } }
  @media (min-width: 992px) {
    .name-collection {
      position: absolute;
      font-weight: bold; }
      .name-collection-top {
        top: 40.9%;
        left: 49.7%; }
      .name-collection-middle {
        top: 49.3%;
        left: 40.8%; }
      .name-collection-bottom {
        top: 74.56%;
        left: 43.5%; } }
  @media (min-width: 1208px) {
    .name-collection {
      position: absolute;
      font-weight: bold; }
      .name-collection-top {
        top: 40.9%;
        left: 54.7%; } }

.wrapper {
  overflow: hidden; }

@-webkit-keyframes search_form {
  from {
    right: -9999px; }
  to {
    right: 45px; } }

@keyframes search_form {
  from {
    right: -9999px; }
  to {
    right: 45px; } }

=======
>>>>>>> f33120fe2d75089d0db2c80f7b4ac208dc152494
.container {
  max-width: 1380px;
  margin: 0 auto; }

.wish {
  font: 24px 'PhagsPa'; }
  .wish-head {
    display: table-caption;
    font-weight: 700;
    text-align: center;
    padding: 80px 0; }
  .wish-table {
    display: table;
    width: 100%; }
    .wish-table .wish-row {
      display: table-row; }
      .wish-table .wish-row > div {
        display: table-cell;
        vertical-align: middle;
        text-align: center;
        border-top: 1px solid #000; }
      .wish-table .wish-row:last-child > div {
        border-bottom: 1px solid #000; }
      .wish-table .wish-row .wish-image {
        width: 16%; }
        .wish-table .wish-row .wish-image img {
          max-width: 175px;
          height: auto; }
      .wish-table .wish-row .wish-name {
        text-align: left;
<<<<<<< HEAD
        margin-right: 30px; }
        .footer-inner > ul > li > a {
          color: #fff;
          text-decoration: none; }
          .footer-inner > ul > li > a:hover {
            color: #fff;
            filter: alpha(Opacity=70);
            opacity: 0.7; }
    .footer-inner .form {
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row;
      -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap; }
      .footer-inner .form_group {
        position: relative;
        display: table;
        border-collapse: separate; }
        .footer-inner .form_group label {
          padding-right: 20px;
          display: inline-block; }
        .footer-inner .form_group input {
          display: inline-block;
          border: 0;
          border-bottom: 1px solid #fff;
          background: transparent;
          color: #fff;
          padding-left: 0; }
        .footer-inner .form_group .btn-submit {
          display: inline;
          text-align: center;
          cursor: pointer;
          padding: 6px 0px;
          font-size: 14px;
          color: #fff;
          border: 0;
          border-bottom: 1px solid #fff;
          background: transparent;
          position: relative; }
      .footer-inner .form_control {
        display: block;
        padding: 6px 12px;
        font-size: 14px; }
    .footer-inner .footer-social-list {
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row;
      -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap; }
      .footer-inner .footer-social-list > ul {
        display: inline; }
        .footer-inner .footer-social-list > ul > li {
          list-style-type: none;
          display: inline;
          text-align: left;
          margin-right: 25px; }
          .footer-inner .footer-social-list > ul > li > a {
            color: #fff;
            text-decoration: none; }
            .footer-inner .footer-social-list > ul > li > a:hover {
              color: #fff;
              filter: alpha(Opacity=70);
              opacity: 0.7; }

.copyright {
  display: block; }
  .copyright p {
    color: #fff;
    filter: alpha(Opacity=30);
    opacity: 0.3;
    font-size: 13px;
    padding: 40px;
    text-align: center; }

/*# sourceMappingURL=data:application/json;base64, */
=======
        width: 34.8%;
        padding: 0 5.7% 0 4.7%; }
        .wish-table .wish-row .wish-name .collection {
          text-transform: uppercase;
          display: block; }
      .wish-table .wish-row .wish-counter {
        width: 17.3%; }
      .wish-table .wish-row .wish-price {
        width: 11.6%;
        font-weight: 700; }
      .wish-table .wish-row .wish-btn {
        width: 20.3%; }

/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> f33120fe2d75089d0db2c80f7b4ac208dc152494
