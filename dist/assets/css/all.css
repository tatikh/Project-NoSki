@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@font-face {
  font-family: 'PhagsPa';
  src: local("../fonts/PhagsPa/PhagsPa"), local("../fonts/PhagsPa/PhagsPa"), url("../fonts/PhagsPa/PhagsPa.woff") format("woff"), url("../fonts/PhagsPa/PhagsPa.ttf") format("truetype");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: 'PhagsPa Bold';
  src: local("../fonts/PhagsPa Bold/PhagsPa Bold"), local("../fonts/PhagsPa Bold/PhagsPa Bold"), url("../fonts/PhagsPa Bold/PhagsPa Bold.woff") format("woff"), url("../fonts/PhagsPa Bold/PhagsPa Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal; }

html {
  box-sizing: border-box;
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  font-family: "PhagsPa", Helvetica, Arial, sans-serif;
  font-size: 14px;
  color: #000;
  background: #fff; }

a {
  color: #000; }
  a:hover {
    color: #262626;
    text-decoration: underline; }

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle; }

.img-responsive {
  max-width: 100%;
  height: auto;
  display: block; }

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: "PhagsPa", Helvetica, Arial, sans-serif;
  font-weight: 500;
  line-height: 1.1;
  color: inherit; }

h1, .h1 {
  font-size: 35px; }

h4, .h4 {
  font-size: 18px; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

.text-nowrap {
  white-space: nowrap; }

.pull-right {
  float: right; }

.pull-left {
  float: left; }

.text-lowercase {
  text-transform: lowercase; }

.text-uppercase {
  text-transform: uppercase; }

.text-capitalize {
  text-transform: capitalize; }

.link-notunderline {
  text-decoration: none; }

ul,
ol {
  margin-top: 0;
  margin-bottom: 1.41429; }
  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin-bottom: 0; }

.list-unstyled {
  padding-left: 0;
  list-style: none; }

.list-inline {
  padding-left: 0;
  list-style: none;
  margin-left: -5px; }
  .list-inline > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px; }

p:last-child,
ul:last-child,
ol:last-child {
  margin-bottom: 0; }

.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?ue6hn0");
  src: url("../fonts/icomoon.eot?ue6hn0#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?ue6hn0") format("truetype"), url("../fonts/icomoon.woff?ue6hn0") format("woff"), url("../fonts/icomoon.svg?ue6hn0#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon {
  width: 25px;
  height: 25px; }

.icon-wishlist:before {
  content: ""; }

.icon-cart .path1:before {
  content: "";
  color: white; }

.icon-cart .path2:before {
  content: "";
  margin-left: -0.8056640625em;
  color: #1d1d1b; }

.icon-cart .path3:before {
  content: "";
  margin-left: -0.8056640625em;
  color: #1d1d1b; }

.icon-search:before {
  content: ""; }

.icon-arrow-right2:before {
  content: ""; }

.icon-instagram:before {
  content: ""; }

.icon-twitter:before {
  content: ""; }

.icon-facebook:before {
  content: ""; }

.icon-pinterest:before {
  content: ""; }

.icon-google:before {
  content: ""; }

.footer {
  background: #000;
  margin-right: auto;
  margin-left: auto;
  /*  padding-left: 188px;
   padding-right: 188px; */ }
  .footer-holder {
    color: #fff;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flex;
    display: -o-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    padding: 90px 15px 75px 15px; }
  .footer-inner {
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flex;
    display: -o-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    padding-top: 40px; }
    .footer-inner > ul {
      display: inline-block; }
      .footer-inner > ul > li {
        list-style-type: none;
        display: block;
        text-align: left;
        margin-right: 30px; }
        .footer-inner > ul > li > a {
          color: #fff;
          text-decoration: none; }
          .footer-inner > ul > li > a:hover {
            color: #fff;
            filter: alpha(Opacity=70);
            opacity: 0.7; }
    .footer-inner .form {
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row;
      -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap; }
      .footer-inner .form_group {
        position: relative;
        display: table;
        border-collapse: separate; }
        .footer-inner .form_group label {
          padding-right: 20px;
          display: inline-block; }
        .footer-inner .form_group input {
          display: inline-block;
          border: 0;
          border-bottom: 1px solid #fff;
          background: transparent;
          color: #fff;
          padding-left: 0; }
        .footer-inner .form_group .btn-submit {
          display: inline;
          text-align: center;
          cursor: pointer;
          padding: 6px 0px;
          font-size: 14px;
          color: #fff;
          border: 0;
          border-bottom: 1px solid #fff;
          background: transparent;
          position: relative; }
      .footer-inner .form_control {
        display: block;
        padding: 6px 12px;
        font-size: 14px; }
    .footer-inner .footer-social-list {
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row;
      -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap; }
      .footer-inner .footer-social-list > ul {
        display: inline; }
        .footer-inner .footer-social-list > ul > li {
          list-style-type: none;
          display: inline;
          text-align: left;
          margin-right: 25px; }
          .footer-inner .footer-social-list > ul > li > a {
            color: #fff;
            text-decoration: none; }
            .footer-inner .footer-social-list > ul > li > a:hover {
              color: #fff;
              filter: alpha(Opacity=70);
              opacity: 0.7; }

.copyright {
  display: block; }
  .copyright p {
    color: #fff;
    filter: alpha(Opacity=30);
    opacity: 0.3;
    font-size: 13px;
    padding: 40px;
    text-align: center; }

/*# sourceMappingURL=data:application/json;base64, */
